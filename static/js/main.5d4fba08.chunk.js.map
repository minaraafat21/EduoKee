{"version":3,"sources":["components/sidebar/Eduokee.svg","Pages/authorize/Eduokee.svg","spotify.js","Pages/favourites/favourites.js","Pages/library/library.js","components/songCard/albumImage.js","components/songCard/albumInfo.js","components/songCard/songCard.js","components/queue/queue.js","components/audioPlayer/controls.js","components/audioPlayer/progressCircle.js","components/audioPlayer/index.js","components/widgets/widgetCardLyrics.js","components/widgets/index.js","components/sidebar/sidebarButton.js","test.js","components/widgets/lyricComperator.js","components/audioPlayer/score.js","Pages/player/player.js","Pages/trending.js","Pages/feed.js","components/sidebar/index.js","Pages/authorize/login.js","Pages/homePage/homePage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","clientId","loginEndpoint","concat","join","apiClient","axios","create","baseURL","setClientToken","token","interceptors","request","use","async","config","headers","Authorization","response","error","status","localStorage","removeItem","Promise","reject","Favourites","playlists","setPlaylists","React","useState","useEffect","APIKIT","get","then","data","items","console","log","tracks","setTracks","params","limit","map","item","track","navigate","useNavigate","createElement","className","onClick","id","state","playPlaylist","src","album","images","url","alt","name","Library","MdOutlinePlaylistPlay","size","color","playlist","CiHeart","AlbumImage","_ref","AlbumInfo","_album$artists","artists","element","album_type","total_tracks","release_date","SongCard","_album$images$","Queue","setCurrentIndex","length","index","_track$track","key","Controls","isPlaying","setIsPlaying","handleNext","handlePrev","IconContext","Provider","value","IoPlaySkipBack","FaPause","IoPlay","IoPlaySkipForward","Circle","percentage","strokeWidth","radius","circ","Math","PI","strokePct","round","r","cx","cy","fill","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","ProgressCircle","_ref2","image","togglePlayState","width","height","x","y","href","clipPath","AudioPLayer","_total$currentIndex","_total$currentIndex$t","_total$","_total$$track","_currentTrack$album","_total$album","_currentTrack$album2","_currentTrack$album2$","currentTrack","currentIndex","total","trackProgress","setTrackProgress","audioSrc","preview_url","audioRef","useRef","Audio","intervalRef","isReady","duration","current","currentPercentage","startTimer","clearInterval","setInterval","ended","currentTime","play","catch","pause","forEach","artist","push","WidgetCardLyrics","title","lyrics","fetchLyrics","artistName","currentTrackName","setLyrics","str","lines","split","startsWith","shift","removeFirstLine","Axios","Widgets","artistID","match","segment","test","Linkify","target","rel","SidebarButton","props","btnClass","useLocation","pathname","to","Link","icon","calculateSimilarity","text1","text2","maxLength","max","str1","str2","matrix","i","j","cost","min","levenshteinDistance","findBestMatch","fullLyrics","recognitionText","bestMatch","similarity","startIndex","substring","test_similarity","test_startIndex","LyricsComparer","Component","constructor","super","arguments","this","compareLyrics","transcript","lyricsWords","toLowerCase","replace","transcriptWordCounts","reduce","counts","word","existsInTranscript","correct","render","ScoreCircle","score","circumference","offset","Player","_currentTrack$album3","_tracks$currentIndex2","location","setCurrentTrack","_location$state","res","_res$data","_res$data$items$","_res$data2","_res$data2$items$","_location$state2","_tracks$currentIndex","setTranscript","setSimilarity","compareLyricsWithTranscript","toString","compareLyricsWithTranscript2","parseFloat","toFixed","startSpeechToText","window","recognition","webkitSpeechRecognition","lang","onresult","event","newTranscript","results","start","setTimeout","stop","alert","TbMicrophone2","Trending","Feed","Sidebar","setImage","isSidebarVisible","setSidebarVisible","isProfileVisible","setProfileVisible","logo","Fragment","handleProfileClick","IoIosLogOut","handleLogout","reload","Login","FaSpotify","HomePage","setToken","getItem","hash","_token","setItem","Router","SideBar","Routes","Route","path","App","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.5d4fba08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Eduokee.fa63b6ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Eduokee.fa63b6ae.svg\";","import axios from 'axios';\n\nconst authEndpoint = 'https://accounts.spotify.com/authorize?';\nconst clientId = 'a1ed86ec4b344fff8c143015130da85d';\n// const redirectUri = 'https://eduokee.me';\nconst redirectUri = 'http://localhost:3000/';\nconst scopes = [\n  'user-library-read',\n  'playlist-read-private',\n  'ugc-image-upload',\n];\n\nexport const loginEndpoint = `${authEndpoint}client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  '%20'\n)}&response_type=token&show_dialog=true`;\n\nconst apiClient = axios.create({\n  baseURL: 'https://api.spotify.com/v1/',\n});\n\nexport const setClientToken = (token) => {\n  apiClient.interceptors.request.use(async function (config) {\n    config.headers.Authorization = 'Bearer ' + token;\n    return config;\n  });\n};\n\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('access_token');\n    }\n    return Promise.reject(error);\n  }\n);\n\nasync function refreshAccessToken() {\n  try {\n    // Refresh the access token here and return the new access token\n    const refreshToken = localStorage.getItem('refresh_token');\n    const response = await getRefreshToken(refreshToken); // Assuming getRefreshToken is a function that takes a refresh token and returns a new access token\n    return response ? response.accessToken : null;\n  } catch (error) {\n    console.error('Failed to refresh access token:', error);\n    return null;\n  }\n}\n\nexport const getRefreshToken = async () => {\n  try {\n    // refresh token that has been previously stored\n    const refreshToken = localStorage.getItem('refresh_token');\n    const url = 'https://accounts.spotify.com/api/token';\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        grant_type: 'refresh_token',\n        refresh_token: refreshToken,\n        client_id: clientId,\n      }),\n    };\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.error) {\n      throw new Error(response.error);\n    }\n\n    localStorage.setItem('access_token', response.access_token);\n    localStorage.setItem('refresh_token', response.refresh_token);\n\n    return response;\n  } catch (error) {\n    console.error('Failed to get refresh token:', error);\n    return null;\n  }\n};\n\nexport default apiClient;\n","import React, { useEffect } from 'react';\nimport APIKIT from '../../spotify';\nimport './favourites.css';\nimport { IconContext } from 'react-icons';\nimport { AiFillPlayCircle } from 'react-icons/ai';\nimport { useNavigate } from 'react-router-dom';\nimport CardWidget from '../../components/widgets/multi-pageCard';\n\nexport default function Favourites() {\n  const [playlists, setPlaylists] = React.useState(null);\n  useEffect(() => {\n    APIKIT.get('/me/playlists').then(function (response) {\n      setPlaylists(response.data.items);\n      // console.log(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n      APIKIT.get('/me/tracks').then(function (response) {\n        console.log(response.data.items);\n      });\n    }, []);\n\n    // //////////////////////////////////////////////////////////////\n    const [tracks, setTracks] = React.useState(null);\n\n    useEffect(() => {\n      APIKIT.get('/me/tracks', {\n        params: {\n          limit: 50,\n        }\n      })\n      .then(function (response) {\n        // console.log(response.data.items);\n        setTracks(response.data.items.map((item) => item.track));\n      });\n    }, []);\n    // //////////////////////////////////////////////////////////////\n\n  const navigate = useNavigate();\n  \n  const playPlaylist = (id) => {\n    navigate('/player', { state: { id: id } });\n  };\n  return (\n    \n      <div className=\"library-body\">\n        {/* <CardWidget pages={pages} /> */}\n        {tracks?.map((track) => (\n          <div className=\"track-card\" onClick={() => playPlaylist(track.id)}> \n            {/* just gonna steal the style */}\n            <img\n                src={track.album.images[0].url}\n                className=\"playlist-image-track\"\n                alt=\"playlist\"\n              />\n              \n            <p className=\"playlist-name\">{track.name}</p>\n\n          </div>\n        ))}\n        \n      </div>\n      \n    \n  );\n}\n","import React, { useEffect } from 'react';\nimport APIKIT from '../../spotify';\nimport './library.css';\nimport { IconContext } from 'react-icons';\nimport { AiFillPlayCircle } from 'react-icons/ai';\nimport { useNavigate } from 'react-router-dom';\nimport CardWidget from '../../components/widgets/multi-pageCard';\nimport Favourites from '../favourites/favourites.js';\nimport { CiHeart } from \"react-icons/ci\";\nimport { MdOutlinePlaylistPlay } from \"react-icons/md\";\nexport default function Library() {\n  const [playlists, setPlaylists] = React.useState(null);\n  useEffect(() => {\n    APIKIT.get('/me/playlists').then(function (response) {\n      setPlaylists(response.data.items);\n      // console.log(response.data);\n    });\n  }, []);\n  // //////////////////////////////////////////////////////////////\n  // const [tracks, setTracks] = React.useState(null);\n\n  // useEffect(() => {\n  //   APIKIT.get('/me/tracks').then(function (response) {\n  //     console.log(response.data.items);\n  //     setTracks(response.data.items.map((item) => item.track));\n  //   });\n  // }, []);\n  // //////////////////////////////////////////////////////////////\n\n  const navigate = useNavigate();\n\n  const playPlaylist = (id) => {\n    navigate('/player', { state: { id: id } });\n  };\n  return (\n    <div className=\"screen-container\">\n      \n      <div className=\"library-body\">\n        {/* <CardWidget pages={pages} /> */}\n        <div className='playlist-row'>\n          <MdOutlinePlaylistPlay size={50} color='white' />\n          \n          <div className='playlists'>\n            \n            {playlists?.map((playlist) => (\n              \n                  <div\n                    className=\"playlist-card\"\n                    onClick={() => playPlaylist(playlist.id)}\n                  >\n                    <img\n                      src={playlist.images[0].url}\n                      className=\"playlist-image\"\n                      alt=\"playlist\"\n                    />\n\n                    <div className=\"playlist-fade\">\n                      \n                    </div>\n                    <p className=\"playlist-name\">{playlist.name}</p>\n                  </div>\n                ))}\n          </div>\n        </div>\n      \n\n\n        <div className=\"fav\">\n        <CiHeart size={50} color='white' />\n          <Favourites />\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./albumImage.css\";\n\nexport default function AlbumImage({ url }) {\n  return (\n    <div className=\"albumImage flex\">\n      <img src={url} alt=\"album art\" className=\"albumImage-art\" />\n      <div className=\"albumImage-shadow\">\n        <img src={url} alt=\"shadow\" className=\"albumImage-shadow\" />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./albumInfo.css\";\n\nexport default function AlbumInfo({ album }) {\n  const artists = album?.artists?.map((element) => element.name) || [];\n  return (\n    <div className=\"albumInfo-card\">\n      <div className=\"albumName-container\">\n        <div className=\"marquee\">\n          <p>{album?.name + \" - \" + artists?.join(\", \")}</p>\n        </div>\n      </div>\n      <div className=\"album-info\">\n        <p>{`${album?.name} is an ${album?.album_type} by ${artists?.join(\n          \", \"\n        )} with ${album?.total_tracks} track(s)`}</p>\n      </div>\n      <div className=\"album-release\">\n        <p>Release Date: {album?.release_date}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AlbumImage from \"./albumImage\";\nimport AlbumInfo from \"./albumInfo\";\nimport \"./songCard.css\";\n\nexport default function SongCard({ album }) {\n  return (\n    <div className=\"songCard-body flex\">\n      <AlbumImage url={album?.images[0]?.url} />\n      <AlbumInfo album={album} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./queue.css\";\n\nexport default function Queue({ tracks, setCurrentIndex }) {\n  return (\n    <div className=\"queue-container flex\">\n      <div className=\"queue flex\">\n        <p className=\"upNext\">Up Next</p>\n        <div className=\"queue-list\">\n          {\n            tracks?.length > 1 && tracks?.map((track, index) => (\n            <div\n              key={index + \"key\"}\n              className=\"queue-item flex\"\n              onClick={() => setCurrentIndex(index)}\n            >\n              <p className=\"track-name\">{track?.track?.name}</p>\n              <p>0:30</p>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./controls.css\";\nimport { IconContext } from \"react-icons\";\nimport { FaPause } from \"react-icons/fa\";\nimport { IoPlaySkipBack, IoPlaySkipForward, IoPlay } from \"react-icons/io5\";\n\nexport default function Controls({\n  isPlaying,\n  setIsPlaying,\n  handleNext,\n  handlePrev,\n}) {\n  return (\n    <IconContext.Provider value={{ size: \"25px\", color: \"#C4D0E3\" }}>\n      <div className=\"controls-wrapper \">\n        <div className=\"action-btn flex\" onClick={handlePrev}>\n          <IoPlaySkipBack />\n        </div>\n        <div\n          className={\n            isPlaying ? \"play-pause-btn flex active\" : \"play-pause-btn flex\"\n          }\n          onClick={() => setIsPlaying(!isPlaying)}\n        >\n          {isPlaying ? <FaPause /> : <IoPlay />}\n        </div>\n        <div className=\"action-btn flex\" onClick={handleNext}>\n          <IoPlaySkipForward />\n        </div>\n      </div>\n    </IconContext.Provider>\n  );\n}\n","import React, {useState} from \"react\";\nimport \"./progressCircle.css\";\nimport Controls from './controls.js';\n\nconst Circle = ({ color, percentage, size, strokeWidth, isPlaying }) => {\n  const radius = size / 2 - 10;\n  const circ = 2 * Math.PI * radius - 20;\n  const strokePct = ((100 - Math.round(percentage)) * circ) / 100;\n\n  return (\n    <circle\n      r={radius}\n      cx=\"50%\"\n      cy=\"50%\"\n      fill=\"transparent\"\n      stroke={strokePct !== circ ? color : \"\"}\n      strokeWidth={strokeWidth}\n      strokeDasharray={circ}\n      strokeDashoffset={isPlaying ? (percentage ? strokePct : 0) : circ}\n      strokeLinecap=\"round\"\n    ></circle>\n  );\n};\n\nexport default function ProgressCircle({\n  percentage,\n  isPlaying,\n  setIsPlaying,\n  size,\n  color,\n  image,\n}) {\n\n  const togglePlayState = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div className=\"progress-circle flex\" onClick={togglePlayState} >\n      <svg width={size} height={size}>\n        <g>\n          <Circle strokeWidth={\"0.4rem\"} color=\"#3B4F73\" size={size} isPlaying={isPlaying} />\n          <Circle\n            strokeWidth={\"0.6rem\"}\n            color={color}\n            percentage={percentage}\n            size={size}\n            isPlaying={isPlaying}\n          />\n        </g>\n        <defs>\n          <clipPath id=\"myCircle\">\n            <circle cx=\"50%\" cy=\"50%\" r={size / 2 - 30} fill=\"#FFFFFF\" />\n          </clipPath>\n          <clipPath id=\"myInnerCircle\">\n            <circle cx=\"50%\" cy=\"50%\" r={size / 2 - 100} fill=\"#FFFFFF\" />\n          </clipPath>\n        </defs>\n        <image\n          className={isPlaying ? \"active\" : \"\"}\n          x={30}\n          y={30}\n          width={2 * (size / 2 - 30)}\n          height={2 * (size / 2 - 30)}\n          href=\"https://pngimg.com/uploads/vinyl/vinyl_PNG107.png\"\n          clipPath=\"url(#myCircle)\"\n        />\n        <image\n          className={isPlaying ? \"active\" : \"\"}\n          x={100}\n          y={100}\n          width={2 * (size / 2 - 100)}\n          height={2 * (size / 2 - 100)}\n          href={image}\n          clipPath=\"url(#myInnerCircle)\"\n        />\n      </svg>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./audioPlayer.css\";\nimport Controls from \"./controls\";\nimport ProgressCircle from \"./progressCircle\";\n\n\nexport default function AudioPLayer({\n  currentTrack,\n  currentIndex,\n  setCurrentIndex,\n  total,\n}) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [trackProgress, setTrackProgress] = useState(0); // work with tracks also npt playlist\n  \n\n  // total.preview if you replace this with current track it should work but the tracks would be shifted\n  var audioSrc =  total.length > 1 ? total[currentIndex]?.track?.preview_url : total?.preview_url;\n  console.log(\"curr\", total);\n  console.log(\"curr\", currentTrack);\n  const audioRef = useRef( total.length > 1 ? new Audio(total[0]?.track?.preview_url) : new Audio(total?.preview_url));\n\n  const intervalRef = useRef();\n\n  const isReady = useRef(false);\n\n  const { duration } = audioRef.current;\n\n  const currentPercentage = duration ? (trackProgress / duration) * 100 : 0;\n\n  const startTimer = () => {\n    clearInterval(intervalRef.current);\n\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        handleNext();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n\n  useEffect(() => {\n    if (audioRef.current.src) {\n      if (isPlaying) {\n        audioRef.current.play().catch(error => console.log(error));\n        startTimer();\n      } else {\n        clearInterval(intervalRef.current);\n        audioRef.current.pause();\n      }\n    } else {\n      if (isPlaying) {\n        audioRef.current = new Audio(audioSrc);\n        audioRef.current.play().catch(error => console.log(error));\n        startTimer();\n      } else {\n        clearInterval(intervalRef.current);\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n\n    setTrackProgress(audioRef.current.currentTime);\n\n    if (isReady.current) {\n      audioRef.current.play().catch(error => console.log(\"\")); // handle edge case where user goes to home without playing anything\n      // setIsPlaying(true);   MUST be initiallyu paused\n      startTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [currentIndex]);\n\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  const handleNext = () => {\n    setIsPlaying(true);\n    if (currentIndex < total.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n      \n    } else setCurrentIndex(0);\n  };\n\n  const handlePrev = () => {\n    setIsPlaying(true);\n    if (currentIndex - 1 < 0) setCurrentIndex(total.length - 1);\n    else setCurrentIndex(currentIndex - 1);\n  };\n\n  const addZero = (n) => {\n    return n > 9 ? \"\" + n : \"0\" + n;\n  };\n  const artists = [];\n  (currentTrack?.album?.artists || total?.album?.artists || []).forEach((artist) => {\n    artists.push(artist.name);\n  });\n  return (\n    <div className=\"player-body\">\n      <div className=\"player-left-body\">\n        <ProgressCircle\n          percentage={currentPercentage}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          image={currentTrack?.album?.images[0]?.url}\n          size={90}\n          color=\"#C96850\"\n        />\n\n        <div className=\"title\">\n          {console.log(\"currentTrack\")}\n          <p className=\"song-title\">{currentTrack?.name ? currentTrack.name : total?.name}</p>\n          <p className=\"song-artist\">{artists.join(\" | \")}</p>\n        </div>\n\n      </div>\n      \n      <div className=\"player-right-body \">\n          {/* <div className=\"song-duration flex\">\n            <p className=\"duration\">0:{addZero(Math.round(trackProgress))}</p>\n            <WaveAnimation isPlaying={isPlaying} />\n            <p className=\"duration\">0:30</p>\n          </div> */}\n          <Controls\n            isPlaying={isPlaying}\n            setIsPlaying={setIsPlaying}\n            handleNext={handleNext}\n            handlePrev={handlePrev}\n            total={total}\n          />\n      \n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport './widgetCardLyrics.css';\n\nexport default function WidgetCardLyrics({title,lyrics}) {\n  return (\n    <div className=\"widgetcard-body\">\n      <p className=\"widget-title\">{title}</p>\n      <div className=\"lyrics-container\">\n            {lyrics}\n       </div>\n        <div className=\"widget-fade\">\n            <div className=\"fade-button\">\n            </div>\n        </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './widgets.css';\nimport apiClient from '../../spotify';\nimport WidgetCardLyrics from './widgetCardLyrics';\nimport Axios from 'axios';\nimport Linkify from 'react-linkify';\n\nfunction removeFirstLine(str) {\n  const lines = str.split('\\n');\n\n  if (lines[0].startsWith('Paroles')) {\n    //based on the api the response always starts with that , but i dont wanna always remove the first line\n    lines.shift(); // Remove the first line\n  }\n\n  return lines.join('\\n');\n}\n\n// Function to fetch lyrics\nexport const fetchLyrics = async (artistName, currentTrackName, setLyrics) => {\n  try {\n    const response = await Axios.get(\n      `https://api.lyrics.ovh/v1/${artistName}/${currentTrackName}`\n    );\n    const lyrics = removeFirstLine(response.data.lyrics);\n    setLyrics(lyrics);\n  } catch (error) {\n    console.error('Error fetching lyrics:', error);\n  }\n};\n\nexport default function Widgets({ artistID, currentTrackName, artistName }) {\n  const [lyrics, setLyrics] = useState('');\n\n  useEffect(() => {\n    // Fetch lyrics when artistID, currentTrackName, or artistName changes\n    if (artistID && currentTrackName && artistName) {\n      fetchLyrics(artistName, currentTrackName, setLyrics);\n    }\n  }, [artistID, currentTrackName, artistName]);\n\n  const renderLyrics = () => {\n    // Split by words and whitespace while preserving formatting\n    const wordsWithFormatting = lyrics.match(/\\S+|\\s+/g) || [];\n  \n    return wordsWithFormatting.map((segment, index) => {\n      // Check if the segment is a word or whitespace\n      const isWord = /\\S/.test(segment);\n  \n      return isWord ? (\n        <Linkify key={index}>\n          <a\n            className=\"lyric-word\"\n            href={`https://www.google.com/search?q=${segment}+definition`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {segment}\n          </a>{' '}\n        </Linkify>\n      ) : (\n        <span key={index}>{segment}</span>\n      );\n    });\n  };\n\n  return (\n    <div className=\"widgets-body flex\">\n      {/* <WidgetCardLyrics title=\"Lyrics\" lyrics={lyrics} /> */}\n      <WidgetCardLyrics title=\"Lyrics\" lyrics={renderLyrics()} />\n    </div>\n  );\n}\n","import React from 'react'\nimport './sidebarButton.css'\nimport { Link, useLocation } from 'react-router-dom'\nimport { IconContext } from 'react-icons'\n\nexport default function SidebarButton(props) {\n    const location = useLocation();\n    const isActive = location.pathname === props.to;\n    const btnClass = isActive ? 'btnActive' : 'btnBody';\n    return (\n        <Link to={props.to} onClick={props.onClick}>\n            <div className={btnClass}>\n                <IconContext.Provider value={{ size: '24px',className:\"btn\" }}>\n                    {props.icon}\n                    <p className='btnTitle'>{props.title}</p>\n                </IconContext.Provider>\n            </div>\n        </Link>\n    )\n}\n","export function calculateSimilarity(text1, text2) {\n  const maxLength = Math.max(text1.length, text2.length);\n  const distance = levenshteinDistance(text1, text2);\n  return 1 - distance / maxLength;\n}\n\nfunction levenshteinDistance(str1, str2) {\n  const matrix = [];\n\n  // Initialize the matrix with the length of the strings\n  for (let i = 0; i <= str1.length; i++) {\n      matrix[i] = [i];\n  }\n\n  for (let j = 0; j <= str2.length; j++) {\n      matrix[0][j] = j;\n  }\n\n  // Fill in the matrix\n  for (let i = 1; i <= str1.length; i++) {\n      for (let j = 1; j <= str2.length; j++) {\n          const cost = str1[i - 1] === str2[j - 1] ? 0 : 1;\n          matrix[i][j] = Math.min(\n              matrix[i - 1][j] + 1, // Deletion\n              matrix[i][j - 1] + 1, // Insertion\n              matrix[i - 1][j - 1] + cost // Substitution\n          );\n      }\n  }\n\n  // Return the Levenshtein distance\n  return matrix[str1.length][str2.length];\n}\n\n\nexport function findBestMatch(fullLyrics, recognitionText) {\n  let bestMatch = { similarity: 0, startIndex: 0 };\n\n  for (let i = 0; i <= fullLyrics.length - recognitionText.length; i++) {\n      const portion = fullLyrics.substring(i, i + recognitionText.length);\n      const similarity = calculateSimilarity(portion, recognitionText);\n\n      if (similarity > bestMatch.similarity) {\n          bestMatch = { similarity, startIndex: i };\n      }\n  }\n\n  return bestMatch;\n}\n\nconst fullLyrics = `Everybody loves the things you do\nFrom the way you talk\nTo the way you move\nEverybody here is watching you\nCause you feel like home\nYou're like a dream come true\nBut if by chance you're here alone\nCan I have a moment\nBefore I go?\nCause I've been by myself all night long\nHoping you're someone I used to know\n\nYou look like a movie\nYou sound like a song\nMy God, this reminds me\nOf when we were young\n\nLet me photograph you in this light\nIn case it is the last time\nThat we might be exactly like we were\nBefore we realized\nWe were sad of getting old\nIt made us restless\nIt was just like a movie\nIt was just like a song\n\nI was so scared to face my fears\nCause nobody told me that you'd be here\nAnd I swore you moved overseas\nThat's what you said, when you left me\n\nYou still look like a movie\nYou still sound like a song\nMy God, this reminds me\nOf when we were young\n\nLet me photograph you in this light\nIn case it is the last time\nThat we might be exactly like we were\nBefore we realized\nWe were sad of getting old\nIt made us restless\nIt was just like a movie\nIt was just like a song\n\nWhen we were young\n\nIt's hard to win me back\nEverything just takes me back\nTo when you were there\nAnd a part of me keeps holding on\nJust in case it hasn't gone\n\nI guess I still care\nDo you still care?\n\nIt was just like a movie\nIt was just like a song\nMy God, this reminds me\nOf when we were young\n\nWhen we were young\n\nLet me photograph you in this light\nIn case it is the last time\nThat we might be exactly like we were\nBefore we realized\nWe were sad of getting old\nIt made us restless\nI'm so mad I'm getting old\nIt makes me reckless\n\nIt was just like a movie\nIt was just like a song\nWhen we were young`;\n\nconst recognitionText = `Viewing this light in case it is the last time that we might be exactly like we were before we realized we were sad of getting old, it made us stress class..`;\n\nconst { similarity, startIndex } = findBestMatch(fullLyrics, recognitionText);\n\nconsole.log(\"Similarity:\", similarity);\nconsole.log(\"Start index:\", startIndex);\nconsole.log(\"Best matched portion:\", fullLyrics.substring(startIndex, startIndex + recognitionText.length));\n","import React from 'react';\nimport './LyricsComparer.css';\n\nclass LyricsComparer extends React.Component {\n    compareLyrics = (lyrics, transcript) => {\n        const lyricsWords = lyrics.toLowerCase().replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\").split(' ');\n        const transcriptWords = transcript.toLowerCase().replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g,\"\").split(' ');\n        // i dont care about punctuation nor case sensitivity\n        \n\n        const transcriptWordCounts = transcriptWords.reduce((counts, word) => {\n            counts[word] = (counts[word] || 0) + 1;\n            return counts;\n        }, {});\n\n        const result = lyricsWords.map((word, index) => {\n            const existsInTranscript = transcriptWordCounts[word] > 0;\n            if (existsInTranscript) {\n                transcriptWordCounts[word]--;\n            }\n\n            const correct = existsInTranscript;\n            return (\n                <span\n                    key={index}\n                    className={correct ? 'correct' : 'incorrect'}\n                >\n                    {word+ ' '} \n                    {/* add the space removed by span */}\n                </span>\n            );\n        });\n\n        return result;\n    }\n\n    render() {\n        const { lyrics, transcript } = this.props;\n        return (\n            <div>\n                {this.compareLyrics(lyrics, transcript )}\n            </div>\n        );\n    }\n}\n\nexport default LyricsComparer;\n","import React from 'react';\nimport './score.css';\n\nconst ScoreCircle = ({ score }) => {\n  const radius = 50;\n  const circumference = 2 * Math.PI * radius;\n  const offset = circumference - (score / 100) * circumference;\n\n  return (\n    <div className=\"score-circle\">\n      <svg width=\"120\" height=\"120\">\n        <circle\n          className=\"background\"\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          strokeWidth=\"10\"\n        />\n        <circle\n          className=\"progress\"\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          strokeWidth=\"10\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n        />\n      </svg>\n      <div className=\"score\">\n        {score}%\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCircle;\n","import React, { useEffect, useState } from 'react';\nimport './player.css';\nimport { useLocation } from 'react-router-dom';\nimport apiClient from '../../spotify';\nimport SongCard from '../../components/songCard/songCard';\nimport Queue from '../../components/queue/queue';\nimport AudioPLayer from '../../components/audioPlayer';\nimport Widgets from '../../components/widgets';\nimport SidebarButton from '../../components/sidebar/sidebarButton';\nimport { TbMicrophone2 } from 'react-icons/tb';\nimport { fetchLyrics } from '../../components/widgets/index.js';\nimport { findBestMatch } from '../../test.js';\nimport LyricsComparer from '../../components/widgets/lyricComperator.js';\nimport ScoreCircle from '../../components/audioPlayer/score.js';\n// import { transcript } from '../../components/sidebar/index.js';\n\nexport default function Player() {\n  const location = useLocation();\n  const [tracks, setTracks] = useState([]);\n  const [currentTrack, setCurrentTrack] = useState({});\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [lyrics, setLyrics] = useState('');\n\n  useEffect(() => {\n    if (location.state) {\n      apiClient\n        .get('playlists/' + location.state?.id + '/tracks')\n        .then((res) => {\n          console.log(res.data?.items[0]?.track);\n          setTracks(res.data.items);\n          setCurrentTrack(res.data?.items[0]?.track);\n        })\n        .catch((error) => {\n          if (error.response.status === 502) {\n            console.error('Error 502: Bad Gateway. Playing default track.');\n            apiClient.get('tracks/' + location.state?.id).then((res) => {\n              if (res.data) {\n                console.log('response ' + res.data);\n                setCurrentTrack(res.data);\n                setTracks(res.data);\n              }\n              // console.log(res.data);\n              // setCurrentTrack(res.data);\n              // setTracks([res.data]);\n            });\n          }\n        });\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    setCurrentTrack(tracks[currentIndex]?.track);\n  }, [currentIndex, tracks]); // Update the current track when the currentIndex or tracks change\n\n  useEffect(() => {\n    if (currentTrack) {\n      fetchLyrics(\n        currentTrack?.album?.artists[0].name,\n        currentTrack?.name,\n        setLyrics\n      );\n    }\n  }, [currentTrack]); // Fetch lyrics when the current track changes\n\n  const [transcript, setTranscript] = useState('');\n  const [similarity, setSimilarity] = useState('');\n  useEffect(() => {\n    setTranscript('');\n    setSimilarity('');\n  }, [currentTrack]); // Reset the transcript when the current track changes\n\n  const startSpeechToText = () => {\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n\n      recognition.lang = 'en-US';\n\n      recognition.onresult = (event) => {\n        const newTranscript = event.results[0][0].transcript;\n        setTranscript(newTranscript);\n      };\n\n      recognition.start(); // Start the recognition\n\n      setTimeout(() => {\n        recognition.stop(); // Stop recognition after 30 seconds\n      }, 30000);\n    } else {\n      alert('Your browser does not support speech recognition.');\n    }\n  };\n\n  const compareLyricsWithTranscript = () => {\n    const { similarity, startIndex } = findBestMatch(lyrics, transcript);\n    // console.log('Similarity:', similarity);\n    // setClientToken(similarity);\n    const bestmatch = lyrics.substring(\n      startIndex,\n      startIndex + transcript.length\n    );\n\n    return [bestmatch];\n  };\n  const compareLyricsWithTranscript2 = () => {\n    const { similarity, startIndex } = findBestMatch(lyrics, transcript);\n    const score = parseFloat(similarity.toFixed(4));\n    console.log('Similarity:', similarity);\n    const bestmatch = lyrics.substring(\n      startIndex,\n      startIndex + transcript.length\n    );\n\n    return [score];\n  };\n\n  // To use this function in another file, you need to export it from this file.\n\n  const pages = [\n    <SongCard album={currentTrack?.album} />,\n    // <AudioPLay\n  ];\n  // const pages2 = [\n\n  // ]\n\n  return (\n    <div className=\"screen-container \">\n      <div className=\"player-container\">\n        <div className=\"left-player-body\">\n          {/* <CardWidget pages={pages} /> */}\n\n          <Widgets\n            artistID={currentTrack?.album?.artists[0].id}\n            currentTrackName={currentTrack?.name}\n            artistName={currentTrack?.album?.artists[0].name}\n          />\n          \n        </div>\n\n        <div className=\"right-player-body\">\n          {/* <CardWidget pages={pages} /> */}\n          <SongCard\n            album={\n              tracks.length > 1\n                ? tracks[currentIndex]?.track.album\n                : tracks.album\n            }\n          />\n          <Queue tracks={tracks} setCurrentIndex={setCurrentIndex} />\n          <LyricsComparer\n            lyrics={compareLyricsWithTranscript().toString()}\n            transcript={transcript}\n          />\n          {/* <WidgetCardLyrics title=\"transcript\" lyrics={transcript} />\n          <WidgetCardLyrics\n            title=\"lyrics\"\n            lyrics={compareLyricsWithTranscript().toString()}\n          /> */}\n          <ScoreCircle score={compareLyricsWithTranscript2() * 100} />\n        </div>\n      </div>\n      <div className=\"footer\">\n        <AudioPLayer\n          currentTrack={currentTrack}\n          total={tracks}\n          currentIndex={currentIndex}\n          setCurrentIndex={setCurrentIndex}\n        />\n        <SidebarButton\n          onClick={startSpeechToText}\n          icon={<TbMicrophone2 />}\n        ></SidebarButton>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Trending() {\n  return (\n    <div>\n      trending\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Feed() {\n  return (\n    <div>\n      feed\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport './sideBar.css'\nimport SidebarButton from './sidebarButton'\nimport { IoHome } from \"react-icons/io5\";\nimport { GoHeartFill } from \"react-icons/go\";\nimport { LuMusic2 } from \"react-icons/lu\";\nimport { IoIosLogOut } from \"react-icons/io\";\nimport apiClient from \"../../spotify\";\nimport logo from './Eduokee.svg';\nimport { Link } from 'react-router-dom';\n\n\n\nexport default function Sidebar() {\n  const handleLogout = () => {\n    window.localStorage.removeItem('token');\n    window.location.reload();\n  }\n  const [image, setImage] = useState(\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRdLAY3C19kL0nV2bI_plU3_YFCtra0dpsYkg&usqp=CAU\"\n  );\n\n  \n\n\n  \n  useEffect(() => {\n    apiClient.get(\"me\").then((response) => {\n      setImage(response.data.images[0].url);\n      console.log(response);\n    }).catch((error) => {\n      if (error.response && error.response.status === 401) {\n        // Handle unauthorized error here\n        console.log(\"Unauthorized error\");\n      } else {\n        // Handle other errors here\n        console.log(\"Error:\", error);\n      }\n    });\n  }, []);\n\n\n  const [isSidebarVisible, setSidebarVisible] = useState(false);\n  const [isProfileVisible, setProfileVisible] = useState(true);\n  const handleProfileClick = () => {\n    setSidebarVisible(!isSidebarVisible);\n    setProfileVisible(false);\n  };\n\n\n\n  \n  \n  return (\n    <div className='sidebar-container'>\n      <Link to = \"/\"  className='logo-container'>\n        <img src={logo}  alt=\"logo\" />\n        \n      </Link>\n      {isProfileVisible && (\n              <>\n        <img src={image} className= \"profile-picture\" alt='avatar' onClick={handleProfileClick} />\n        </>\n      )}\n         \n      \n\n      {isSidebarVisible && (\n      <><div className='sidebar-button'>\n        </div><SidebarButton title=\"logout\" icon={<IoIosLogOut />} onClick={handleLogout} /></>\n      )}\n    </div>\n  )\n \n}\n\n\n  \n","import React from 'react';\n// import { IoLogIn } from 'react-icons/io5';\nimport { FaSpotify } from 'react-icons/fa';\nimport { loginEndpoint } from '../../spotify';\nimport logo from './Eduokee.svg';\nimport './login.css';\n\nexport default function Login() {\n  return (\n    <div className='login-page'>\n      <img src={logo} alt='Logo' className='eduokee' />\n      <FaSpotify className='login-icon' />\n      <a href={loginEndpoint}>\n        <div className='login-btn'>\n          \n          Login with Spotify\n        </div>\n      </a>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Library from '../library/library';\nimport Favourites from '../favourites/favourites';\nimport Player from '../player/player';\nimport Trending from '../trending';\nimport Feed from '../feed';\nimport './home.css';\nimport SideBar from '../../components/sidebar';\nimport Login from '../authorize/login';\nimport { setClientToken } from '../../spotify';\nimport AudioPLayer from '../../components/audioPlayer';\n\nexport default function HomePage() {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    let token = window.localStorage.getItem('token');\n    const hash = window.location.hash;\n    window.location.hash = '';\n    if (!token && hash) {\n      // console.log(hash);\n      const _token = hash.split('&')[0].split('=')[1];\n      // console.log(_token);\n      window.localStorage.setItem('token', _token);\n      setToken(_token);\n\n      setClientToken(_token);\n    }\n    if (token) {\n      console.log(token);\n      setToken(token);\n      // console.log(token);\n      setClientToken(token);\n    } else {\n      console.log('No token found');\n      // refresh token\n       // maybe i should redirect to login dont know yet\n    }\n  }, []);\n\n  return !token ? (\n    <Login />\n  ) : (\n    <Router> \n      <div className=\"main\">\n        <SideBar />\n        \n        <Routes>\n          <Route path=\"/\" element={<Library />} />\n          <Route path=\"/favorites\" element={<Favourites />} />\n          <Route path=\"/player\" element={<Player />} />\n          <Route path=\"/trending\" element={<Trending />} />\n          <Route path=\"/feed\" element={<Feed />} />\n        </Routes>\n      \n      </div>\n      \n    </Router>\n  );\n}\n","import React from 'react';\nimport HomePage from './Pages/homePage/homePage';\n\nexport default function App() {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}